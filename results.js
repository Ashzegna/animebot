// –ú–æ–¥—É–ª—å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∞
const { animePersonalityTypes, typeCompatibility } = require('./config');

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –ª–∏—á–Ω–æ—Å—Ç–∏/—Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {Array} answers - –º–∞—Å—Å–∏–≤ –æ—Ç–≤–µ—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {String} - –∫–ª—é—á —Ç–∏–ø–∞ —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 */
function determinePersonalityType(answers) {
  // –ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞
  const scores = {
    emotionalTelepatia: 0,
    magneticAttraction: 0,
    relationshipAlchemy: 0,
    soulHealer: 0,
    wisdomKeeper: 0,
    specialMomentCreator: 0,
    impossibilityMaster: 0
  };
  
  // –ü–æ–¥—Å—á–µ—Ç –æ—á–∫–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ç–≤–µ—Ç–æ–≤
  answers.forEach(answer => {
    if (answer && answer.type) {
      scores[answer.type] += 1;
    }
  });
  
  // –ù–∞—Ö–æ–¥–∏–º —Ç–∏–ø —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—á–∫–æ–≤
  let maxScore = 0;
  let resultType = 'relationshipAlchemy'; // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  
  Object.keys(scores).forEach(type => {
    if (scores[type] > maxScore) {
      maxScore = scores[type];
      resultType = type;
    }
  });
  
  return resultType;
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {String} type - —Ç–∏–ø —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏
 * @returns {Object} - –æ–±—ä–µ–∫—Ç —Å –ø–æ–ª–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
 */
function generateResult(type) {
  const personalityType = animePersonalityTypes[type] || animePersonalityTypes.relationshipAlchemy;
  
  return {
    type,
    name: personalityType.name,
    emoji: personalityType.emoji,
    description: personalityType.description,
    examples: personalityType.examples,
    songLine: personalityType.songLine,
    songUrl: personalityType.songUrl
  };
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–≤—É—Ö —Ç–∏–ø–æ–≤ —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–µ–π
 * @param {String} type1 - —Ç–∏–ø –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {String} type2 - —Ç–∏–ø –≤—Ç–æ—Ä–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {Object} - –æ–±—ä–µ–∫—Ç —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 */
function analyzeCompatibility(type1, type2) {
  let compatibilityText = '';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —ç—Ç–æ–π –ø–∞—Ä—ã —Ç–∏–ø–æ–≤
  if (typeCompatibility[type1] && typeCompatibility[type1][type2]) {
    compatibilityText = typeCompatibility[type1][type2];
  } else if (typeCompatibility[type2] && typeCompatibility[type2][type1]) {
    compatibilityText = typeCompatibility[type2][type1];
  } else {
    // –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –µ—Å–ª–∏ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ–≥–æ –Ω–µ—Ç
    compatibilityText = '–í–∞—à–∏ —Å–≤–µ—Ä—Ö—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –¥–æ–ø–æ–ª–Ω—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞, —Å–æ–∑–¥–∞–≤–∞—è —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å. –í–º–µ—Å—Ç–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤–∏–¥–µ—Ç—å –∏ —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ, —á–µ–º –ø–æ –æ—Ç–¥–µ–ª—å–Ω–æ—Å—Ç–∏.';
  }
  
  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ —Å–æ–≤–º–µ—Å—Ç–∏–º—ã —Ç–∏–ø—ã (–æ—Ç 1 –¥–æ 5)
  let compatibilityLevel = 3; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ä–µ–¥–Ω—è—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
  
  // –í—ã—Å–æ–∫–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –ø–∞—Ä
  if (
    (type1 === 'emotionalTelepatia' && type2 === 'soulHealer') || 
    (type1 === 'soulHealer' && type2 === 'emotionalTelepatia') ||
    (type1 === 'magneticAttraction' && type2 === 'specialMomentCreator') || 
    (type1 === 'specialMomentCreator' && type2 === 'magneticAttraction') ||
    (type1 === 'relationshipAlchemy' && type2 === 'impossibilityMaster') || 
    (type1 === 'impossibilityMaster' && type2 === 'relationshipAlchemy')
  ) {
    compatibilityLevel = 5;
  } 
  // –•–æ—Ä–æ—à–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Ç–∏–ø–æ–≤
  else if (type1 === type2) {
    compatibilityLevel = 4;
  }
  // –°—Ä–µ–¥–Ω—è—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å –¥–ª—è –∫–æ–º–±–∏–Ω–∞—Ü–∏–π —Å wisdom
  else if (
    (type1 === 'wisdomKeeper' || type2 === 'wisdomKeeper')
  ) {
    compatibilityLevel = 3;
  }
  
  // –°–æ—Å—Ç–∞–≤–ª—è–µ–º –æ–±—â—É—é —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ø–µ—Å–Ω–∏ –¥–ª—è –ø–∞—Ä—ã
  const type1Data = animePersonalityTypes[type1];
  const type2Data = animePersonalityTypes[type2];
  
  // –ë–µ—Ä–µ–º —Å—Ç—Ä–æ—á–∫—É –∏–∑ –ø–µ—Å–Ω–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Ä–æ–≤–Ω—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
  let songLine = '';
  if (compatibilityLevel >= 4) {
    songLine = '–ú—ã —Å —Ç–æ–±–æ–π –¥–≤–∞ –ø–∞–∑–ª–∞ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–æ—Ä–æ–±–æ–∫, –∫—Ä–∞—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç, –Ω–æ —É–∑–æ—Ä –æ–¥–∏–Ω üß©‚ú®';
  } else if (compatibilityLevel === 3) {
    songLine = '–ù–∞—à –ø–∞–∑–ª —Å–ª–æ–∂–∏–ª—Å—è, –ø—É—Å—Ç—å –Ω–µ –∏–¥–µ–∞–ª—å–Ω–æ, –Ω–æ —ç—Ç–æ –Ω–∞—à–∞ –∏—Å—Ç–æ—Ä–∏—è ‚Äì —É–Ω–∏–∫–∞–ª—å–Ω–∞—è, —Ä–µ–∞–ª—å–Ω–∞—è üìñüí´';
  } else {
    songLine = '–ü—É—Å—Ç—å –≤–µ—Å—å –º–∏—Ä —Ç–≤–µ—Ä–¥–∏—Ç, —á—Ç–æ –º—ã –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ–º, –Ω–æ –º—ã-—Ç–æ –∑–Ω–∞–µ–º, –∑–Ω–∞–µ–º, –∑–Ω–∞–µ–º üëÄ‚ú®';
  }
  
  return {
    compatibilityLevel,
    compatibilityText,
    songLine,
    emojis: `${type1Data.emoji} + ${type2Data.emoji}`,
    songUrl: type1Data.songUrl // –ò—Å–ø–æ–ª—å–∑—É–µ–º URL –ø–µ—Å–Ω–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ —Ç–∏–ø–∞
  };
}

module.exports = {
  determinePersonalityType,
  generateResult,
  analyzeCompatibility
};
